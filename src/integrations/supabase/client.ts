
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vhmkkbwxhdhwctwspklq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZobWtrYnd4aGRod2N0d3Nwa2xxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2OTAyODksImV4cCI6MjA1ODI2NjI4OX0.yzygXlj4kivuw50P3su3T7f-wfO4BectqqLJ9OAeNC4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true, // Enable session persistence
    storageKey: 'financetracker-auth-session', // Custom storage key for the session
    autoRefreshToken: true, // Enable token auto-refresh
    detectSessionInUrl: true, // Enable session detection in URL
    flowType: 'pkce', // Use PKCE flow for better security and performance
  },
  global: {
    headers: {
      'X-Client-Info': 'financetracker-web',
    },
  },
  db: {
    schema: 'public',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});

// Create a function to enable realtime subscription for a table
export const enableRealtimeForTable = async (tableName: string) => {
  try {
    // Modified to use a direct channel subscription approach instead of RPC
    const channel = supabase
      .channel(`realtime:${tableName}`)
      .on('postgres_changes', {
        event: '*',
        schema: 'public',
        table: tableName
      }, (payload) => {
        console.log(`Realtime event for ${tableName}:`, payload);
      })
      .subscribe((status) => {
        console.log(`Realtime subscription status for ${tableName}:`, status);
      });
    
    console.log(`Realtime enabled for ${tableName}`);
    return true;
  } catch (err) {
    console.error(`Failed to enable realtime for ${tableName}:`, err);
    return false;
  }
};
